<project name="GProMBlackBoxTests" 
	default="compile" 
	basedir="."
	xmlns:ivy="antlib:org.apache.ivy.ant"
	xmlns:artifact="antlib:org.apache.maven.artifact.ant"
	xmlns:if="ant:if"
    xmlns:unless="ant:unless"
	>

	<description>GProM automatically generated junit blackbox tests.</description>
	
	<property name="projectroot" value="${basedir}/.." />
		
	<!-- ClassPath Setup -->
	<property name="classpath.name.bin" value="classpath.bin" />
	<property name="classpath.name.build" value="classpath.build" />
	<property name="classpath.name.run" value="classpath.run" />
	
	<!-- define artifacts' name, which follows the convention of Maven -->
	<property name="artifactId" value="gprom-blackbox-tests" />
	
	<!-- directories -->
	<property name="dir.build" value="${projectroot}/build"/>
	<property name="dir.source" value="${projectroot}/javatest" />
	<property name="dir.bin" value="${dir.build}/javabin" />
	<property name="dir.testsrc" value="${projectroot}/autotests" />
	<property name="dir.testbin" value="${dir.bin}/org/gprom/jdbc/test/autotests" />
	<property name="dir.buildresource" value="${projectroot}/ant" />
	<property name="dir.library" value="${dir.build}/javatestlib" />
	<property name="dir.lib.main" value="${dir.build}/javalib" />
	<property name="dir.antlib" value="${projectroot}/ant" />
	<property name="dir.resource" value="${projectroot}/blackboxtests"/>
	<property name="dir.testcase" value="${dir.resource}/testcases"/>
	<property name="jar.generator" value="${dir.library}/gprom-test-gen.jar" />
	<property name="jar.build" value="${dir.build}/gprom-jdbc-test.jar" />
	
	<!-- Main Class and Packages-->
	<property name="package.name" value="org.gprom.jdbc.test.autotests" />
  	<property name="mainclass" value="tresc.benchmark.iBench" />
	<property name="jar.creator" value="Illinois Institute of Technology, Department of Computer Science, DBGroup" />
	<property name="package" value="*" />
	<property name="mvn.description" value="This jar file contains automated tests for GProM" />
	<property name="mvn.url" value="https://github.com/IITDBGroup/gprom" />
	
	<!-- ivy settings -->
	<property name="ivy.file.test" value="${dir.buildresource}/ivy-test.xml" />
	<property name="ivy.file.build" value="${dir.buildresource}/ivy.xml" />
	
	<import file="${projectroot}/antutils/ant-common.xml" />
	
	<!-- settings -->
	<!-- get test name if specified -->
	<property name="junit.testname" value="${testname}" />
	
	<path id="libraries">
		<fileset dir="${dir.library}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${dir.lib.main}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${dir.antlib}" />
		<fileset dir="${ant.library.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="createTestsClasspath">
		<path refid="libraries" />
		<pathelement path="${dir.resource}" />
		<fileset dir="${dir.lib.main}" />
		<fileset dir="${dir.antlib}" />
		<pathelement path="${dir.bin}" />
		<fileset dir="${ant.library.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="runTestsClasspath">
		<fileset dir="${dir.library}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${dir.lib.main}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${dir.lib.main}" />
		<pathelement path="${dir.resource}" />
		<pathelement path="${dir.bin}"/>
	</path>

	<target name="download-dependencies" 
			depends="mkdirs-and-setup-props" 
			description="use ivy to download dependencies">
			
		<ivy-download-deps ivyfile="${ivy.file.test}"/>
		<classpath-from-dir dir="${dir.buildlib}" 
				pathname="${classpath.name.build}" 
				pathnamejar="${classpath.name.build}.jar"/>
		<classpath-from-dir dir="${dir.lib.main}" 
				pathname="${classpath.name.bin}" 
				pathnamejar="${classpath.name.bin}.jar"/>
		<classpath-from-dir dir="${dir.library}" 
				pathname="${classpath.name.run}" 
				pathnamejar="${classpath.name.run}.jar"/>
	</target>

	
	<target name="setup-additional-anttasks" 
			depends="download-dependencies">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"
			classpathref="${classpath.name.build}">
		</taskdef>
	</target>
	
	<target name="adapt-ddl-scripts"
			depends="setup-additional-anttasks"
			description="adapt DDL script to run from the source path">
		
		<var name="testdbscript" value="${dir.resource}/testdb/testDB.sql" />
		<antcall target="adapt-test-ddl-script" />
	</target>
	
	<target name="adapt-test-ddl-script">
	
		<copy file="${testdbscript}.in" tofile="${testdbscript}" overwrite="false">
			<filterchain>
				<replacetokens>
					<token key="PERMTESTERDIR" value="${projectrootdir}"/>
				</replacetokens>
			</filterchain>
		</copy>
	</target>
	
	<target name="clean-all"
		description="clean all">
		
		<delete dir="${dir.bin}" includeemptydirs="true" />
		<delete dir="${dir.build}" includeemptydirs="true" />
		<delete dir="${dir.testsrc}" includeemptydirs="true" />
	</target>
	
	<target name="clean" 
			depends="adapt-ddl-scripts"
			description="clean">
		<mkdir dir="${dir.testsrc}" />
	</target>
	
	<target name="compile" 
			depends="clean"
			description="compile the test generator java files">
		<depend srcdir="${dir.source}"
		        destdir="${dir.bin}"
		        cache="depcache"
		        closure="yes"/>
		<javac srcdir="${dir.source}" 
				destdir="${dir.bin}" 
				classpathref="${classpath.name.bin}" 
				debug="on"  
				fork="true" 
				includeantruntime="false">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	
	<target name="jar-generator" 
			depends="jar"
			description="create a jar file for the test generator">
<!--		<jar destfile="${jar.generator}" basedir="${dir.bin}">
			<manifest>
				<attribute name="Created-By" value="Illinois Institute of Technology, Department for Computer Science, DBGroup" />
			</manifest>
		</jar> -->
		<copy file="${jar.generator}" tofile="${jar.build}" />
	</target>
	
	<target name="gen-tests" 
			depends="jar-generator"
			description="generate JUnit blackbox tests from xml files">
		
		<java 
			classname="org.gprom.jdbc.test.testgenerator.TestGenerator" 
			classpathref="createTestsClasspath"
			fork="true" 
			dir="${basedir}"
		>
			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" 
				value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
			<sysproperty key="generator.resourcedir" value="${dir.resource}" />
			<sysproperty key="generator.testcasedir" value="${dir.testcase}" />
			<sysproperty key="generator.sourcedir" value="${dir.testsrc}" />
			<sysproperty key="generator.package" value="${package.name}" />
		</java>
	</target>
	
	<target name="compile-tests" 
			depends="gen-tests"
			description="compile the generated JUnit tests">
		
		<depend srcdir="${dir.testsrc}"
		        destdir="${dir.bin}"
		        cache="depcache"
		        closure="yes"/>
		<javac srcdir="${dir.testsrc}" destdir="${dir.bin}" classpathref="${classpath.name.run}" 
			debug="on" fork="true" includeantruntime="false">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	
	<target name="load-properties">
		
		<property file="${dir.resource}/options.txt" prefix="Options."/>
		<fail message="Not all necessary options set in file ${dir.resource}/options.txt: DBName, User, Password, Schema, Path, PermPrefix">
		    <condition>
		        <not>
		            <and>
			            	<isset property="Options.DBName" />
			            	<isset property="Options.AdminDBName" />
			            	<isset property="Options.User" />
			            	<isset property="Options.Password" />
			            	<isset property="Options.Schema" />
			            	<isset property="Options.Path" />
			            	<isset property="Options.PermPrefix" />
			            	<isset property="Options.PermCluster" />
			            	<isset property="Options.PermSource" />
		            </and>
		        </not>
		    </condition>
		</fail>
	</target>
		
	<target name="run-tests" 
			depends="compile-tests"
			description="run all generated junit tests">
		
		<delete dir="${basedir}/results"/>
		<mkdir dir="${basedir}/results"/>
		<junit printsummary="withOutAndErr" 
				haltonfailure="false" 
				haltonerror="false" 
				showoutput="true" 
				timeout="300000" 
				enableTestListenerEvents="true" 
				fork="true">
			<classpath refid="${classpath.name.run}"/>
			<formatter type="brief" usefile="false" />
			<formatter type="xml"/>
	        <batchtest todir="${basedir}/results">
	            <fileset dir="${dir.testsrc}">
	                <include name="**/*_Test.java"/>
	            </fileset>
	        </batchtest>
			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
			<sysproperty key="log4j.configurationFile" value="log4jtest.properties" />
		</junit>
	</target>

	<target name="run-test-only"
			description="run junit tests, requires tests to be compiled upfront">
		<!-- run all tests unless user has provided a test name -->
        <if>
          <not><equals arg1="${junit.testname}" arg2="$${testname}" /></not>
		<!-- run user provided test -->
    		<then>
            <echo message="Run ${junit.testname}" />
    			<delete dir="${basedir}/results"/>
	    		<mkdir dir="${basedir}/results"/>
	    		<junit printsummary="withOutAndErr" 
	    				haltonfailure="true" 
	    				haltonerror="true" 
	    				showoutput="true" 
	    				enableTestListenerEvents="true" 
	    				fork="true">
	    			<classpath refid="${classpath.name.run}"/>
	    	        <batchtest  todir="${basedir}/results" fork="true">
	    	            <fileset dir="${dir.testsrc}">
	    	                <include name="**/${junit.testname}.java"/>
	    	            </fileset>
	    	        </batchtest>
	    			<formatter type="brief" usefile="false" />
	    			<formatter type="xml"/>
	    			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
	    			<sysproperty key="log4j.configurationFile" value="log4jtest.properties" />
	    		</junit>
		</then>
        	<!-- run all tests unless user has provided a test name -->
        <else>
            <echo message="Run all tests" />
	    		<delete dir="${basedir}/results"/>
	    		<mkdir dir="${basedir}/results"/>
	          	<junit printsummary="withOutAndErr" 
	          			haltonfailure="true" 
	          			haltonerror="true" 
	          			showoutput="true" 
	          			enableTestListenerEvents="true" 
	          			fork="true">
	    			<classpath refid="${classpath.name.run}"/>
	    	        <batchtest todir="${basedir}/results" fork="true">
	    	            <fileset dir="${dir.testsrc}">
	    	                <include name="**/*_Test.java"/>
	    	            </fileset>
	    	        </batchtest>
	    			<formatter type="brief" usefile="false" />
	    			<formatter type="xml"/>
	    			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
	    			<sysproperty key="log4j.configurationFile" value="log4jtest.properties" />
	    		</junit>
		</else>
        </if> 
	</target>

	
</project>