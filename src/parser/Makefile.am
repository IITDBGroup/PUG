AM_CPPFLAGS = -I$(top_srcdir)/include
# overwrite Werror for warning created by yacc/lex
AM_CFLAGS = @GPROM_CFLAGS_OPT@ 

AM_YFLAGS = -d

# call lex and yacc if no parser files exist
BUILT_SOURCES = gen_parsers

.PHONY = gen_parsers

# check if files generated by flex and bison already exist and not then generating them 
# to not confuse make's dependency tracking
gen_parsers:
	@if test -f $(srcdir)/sql_parser.lex.c; then :; else \
    	echo "lex parser sql_parser.l"; \
	    $(LEX) -o$(srcdir)/sql_parser.lex.c $(srcdir)/sql_parser.l; \
	fi
	@if test -f $(srcdir)/sql_parser.tab.h; then :; else \
		echo "bison parser sql_parser.y"; \
	 	$(BISON) -Werror -d $(srcdir)/sql_parser.y; \
	fi
	@if test -f $(srcdir)/postgres_parser.lex.c; then :; else \
    	echo "lex parser postgres_parser.l"; \
	    $(LEX) -o$(srcdir)/postgres_parser.lex.c $(srcdir)/postgres_parser.l; \
	fi
	@if test -f $(srcdir)/postgres_parser.tab.h; then :; else \
		echo "bison parser postgres_parser.y"; \
	 	$(BISON) -Werror -d $(srcdir)/postgres_parser.y; \
	fi
	@if test -f $(srcdir)/dl_parser.lex.c; then :; else \
    	echo "lex parser dl_parser.l"; \
	    $(LEX) -o$(srcdir)/dl_parser.lex.c $(srcdir)/dl_parser.l; \
	fi
	@if test -f $(srcdir)/dl_parser.tab.h; then :; else \
		echo "bison parser dl_parser.y"; \
	 	$(BISON) -Werror -d $(srcdir)/dl_parser.y; \
	fi	
	@if test -f $(srcdir)/jp_parser.lex.c; then :; else \
    	echo "lex parser jp_parser.l"; \
	    $(LEX) -o$(srcdir)/jp_parser.lex.c $(srcdir)/jp_parser.l; \
	fi
	@if test -f $(srcdir)/jp_parser.tab.h; then :; else \
		echo "bison parser jp_parser.y"; \
	 	$(BISON) -Werror -d $(srcdir)/jp_parser.y; \
	fi
	@if test -f $(srcdir)/rpq_parser.lex.c; then :; else \
    	echo "lex parser rpq_parser.l"; \
	    $(LEX) -o$(srcdir)/rpq_parser.lex.c $(srcdir)/rpq_parser.l; \
	fi
	@if test -f $(srcdir)/rpq_parser.tab.h; then :; else \
		echo "bison parser rpq_parser.y"; \
	 	$(BISON) -Werror -d $(srcdir)/rpq_parser.y; \
	fi
#parsers.stamp:  postgres_parser.lex.h postgres_parser.tab.h \
#				dl_parser.tab.h dl_parser.lex.h \
#				jp_parser.tab.h jp_parser.lex.h \
#				rpq_parser.tab.h rpq_parser.lex.h

# Explicitly record parser dependencies on bison and flex generated files
#sql_parser.lex.$(OBJEXT): sql_parser.lex.h 
#sql_parser.tab.$(OBJEXT): sql_parser.tab.h
#sql_parser.$(OBJEXT): sql_parser.tab.$(OBJEXT) sql_parser.lex.$(OBJEXT)
#parser_oracle.$(OBJEXT): sql_parser.$(OBJEXT)
# 
#postgres_parser.lex.$(OBJEXT): postgres_parser.lex.h 
#postgres_parser.tab.$(OBJEXT): postgres_parser.tab.h
#parser_postgres.$(OBJEXT): postgres_parser.tab.$(OBJEXT) postgres_parser.lex.$(OBJEXT)
#
#dl_parser.lex.$(OBJEXT): dl_parser.lex.h 
#dl_parser.tab.$(OBJEXT): dl_parser.tab.h
#parser_dl.$(OBJEXT): dl_parser.tab.$(OBJEXT) dl_parser.lex.$(OBJEXT)
#
#jp_parser.lex.$(OBJEXT): jp_parser.lex.h 
#jp_parser.tab.$(OBJEXT): jp_parser.tab.h
#parser_jp.$(OBJEXT): jp_parser.tab.$(OBJEXT) jp_parser.lex.$(OBJEXT)
#
#rpq_parser.lex.$(OBJEXT): rpq_parser.lex.h 
#rpq_parser.tab.$(OBJEXT): rpq_parser.tab.h
#parser_rpq.$(OBJEXT): rpq_parser.tab.$(OBJEXT) rpq_parser.lex.$(OBJEXT)

# Files generated by bison and flex should be cleaned up too
CLEANFILES = sql_parser.lex.h sql_parser.y.old sql_parser.l.old sql_parser.lex.c sql_parser.tab.h sql_parser.tab.c sql_parser.c \
			postgres_parser.lex.h postgres_parser.lex.c postgres_parser.tab.h postgres_parser.tab.c \
			dl_parser.lex.h dl_parser.lex.c dl_parser.tab.h dl_parser.tab.c \
            jp_parser.lex.h jp_parser.lex.c jp_parser.tab.h jp_parser.tab.c \
            rpq_parser.lex.h rpq_parser.lex.c rpq_parser.tab.h rpq_parser.tab.c 

# Parser subdir library depends on regular C sources and C files generated by bison and flex
noinst_LTLIBRARIES        	= libparser.la
libparser_la_SOURCES		= parser.c \
			        parser_oracle.c \
				  	parser_postgres.c \
			        parser_dl.c \
		            parser_jp.c \
		            parser_rpq.c \
		            sql_parser.lex.c sql_parser.tab.c \
		            postgres_parser.lex.c postgres_parser.tab.c \
		            dl_parser.lex.c dl_parser.tab.c \
		            jp_parser.lex.c jp_parser.tab.c \
		            rpq_parser.lex.c rpq_parser.tab.c
		            
#parser_hive.c hive_parser.lex.c hive_parser.tab.c

#libparser_la_LIBADD      	= 
 
# Tell automake how to generate bison/flex C files from .y and .l files								 				
sql_parser.lex.h sql_parser.lex.c: sql_parser.l
	$(LEX) -osql_parser.lex.c $<

sql_parser.tab.h sql_parser.tab.c: sql_parser.y
	$(BISON) -Werror -d $<
	
postgres_parser.lex.h postgres_parser.lex.c: postgres_parser.l
	$(LEX) -opostgres_parser.lex.c $<

postgres_parser.tab.h postgres_parser.tab.c: postgres_parser.y
	$(BISON) -b postgres_parser -Werror -d $<

#hive_parser.lex.h hive_parser.lex.c: hive_parser.l
#	$(LEX) -ohive_parser.lex.c $<

#hive_parser.tab.h hive_parser.tab.c: hive_parser.y
#	$(BISON) -b hive_parser -Werror -d $<

dl_parser.lex.h dl_parser.lex.c: dl_parser.l
	$(LEX) -odl_parser.lex.c $<

dl_parser.tab.h dl_parser.tab.c: dl_parser.y
	$(BISON) -b dl_parser -Werror -d $<

jp_parser.lex.h jp_parser.lex.c: jp_parser.l
	$(LEX) -ojp_parser.lex.c $<

jp_parser.tab.h jp_parser.tab.c: jp_parser.y
	$(BISON) -b jp_parser -Werror -d $<
	
rpq_parser.lex.h rpq_parser.lex.c: rpq_parser.l
	$(LEX) -orpq_parser.lex.c $<

rpq_parser.tab.h rpq_parser.tab.c: rpq_parser.y
	$(BISON) -b rpq_parser -Werror -d $<